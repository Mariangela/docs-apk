{"remainingRequest":"/Volumes/Case-Sensitive/APK/APK-DOCS-V2/docs-apk/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Volumes/Case-Sensitive/APK/APK-DOCS-V2/docs-apk/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Case-Sensitive/APK/APK-DOCS-V2/docs-apk/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Case-Sensitive/APK/APK-DOCS-V2/docs-apk/docs/.vuepress/theme/components/Home.vue?vue&type=template&id=7c7ce968&","dependencies":[{"path":"/Volumes/Case-Sensitive/APK/APK-DOCS-V2/docs-apk/docs/.vuepress/theme/components/Home.vue","mtime":1676608477947},{"path":"/Volumes/Case-Sensitive/APK/APK-DOCS-V2/docs-apk/node_modules/cache-loader/dist/cjs.js","mtime":1676528952569},{"path":"/Volumes/Case-Sensitive/APK/APK-DOCS-V2/docs-apk/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1676528953302},{"path":"/Volumes/Case-Sensitive/APK/APK-DOCS-V2/docs-apk/node_modules/cache-loader/dist/cjs.js","mtime":1676528952569},{"path":"/Volumes/Case-Sensitive/APK/APK-DOCS-V2/docs-apk/node_modules/vue-loader/lib/index.js","mtime":1676528953040}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}